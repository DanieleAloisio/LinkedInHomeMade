@model ApplicationUserModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="main-body">
        <!-- Modal Modifica Profilo-->
        <div class="modal fade" id="mdlModProf" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Modifica Profilo</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group">
                                        <h6 class="mb-0"><label asp-for="@Model.Nome"></label></h6>
                                        <input type="text" asp-for="@Model.Nome" class="form-control w-75" />
                                    </div>
                                    <div class="form-group">
                                        <h6 class="mb-0"><label asp-for="@Model.Cognome"></label></h6>
                                        <input type="text" asp-for="@Model.Cognome" class="form-control w-75" />
                                    </div>
                                    <div class="form-group">
                                        <h6 class="mb-0"><label asp-for="@Model.Professione"></label></h6>
                                        <input type="text" asp-for="@Model.Professione" class="form-control w-75" />
                                    </div>
                                    <div class="form-group">
                                        <h6 class="mb-0"><label asp-for="@Model.Mobile"></label></h6>
                                        <input type="text" asp-for="@Model.Mobile" class="form-control w-75" />
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Chiudi</button>
                        <button type="button" id="btnModifica" name="btnModifica" class="btn btn-primary">Modifica</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Close Modal -->
        @{
            await Html.RenderPartialAsync("InserisciSkill", new SkillViewModel());
        }

        @*todo centralizzare*@
        <div class="row row gutters-sm ml-5 mt-2">
            <div class="col-4">
                <div id="alertTemplate" class="alert d-none" role="alert">
                    <span id="messageAlertTemplate"> </span>
                </div>
            </div>
        </div>

        <div id="dialog" style="overflow: hidden;">
            <div class="row gutters-sm col-12">
                <div class="d-flex flex-column text-center col-5">
                    <div class="col-12">
                        <div class="containerImage">
                            <img style="height:200px; width:200px" src="@Model.ImageProfile" />
                            <button type="button" id="OpenImgUpload" name="btnModificaProfilo" class="btn btn-outline-info btn-circle">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="fa-solid fa-image" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                                </svg>
                            </button>
                        </div>
                        <!-- badge -->
                        <div class="rank-label-container">
                            <span class="label label-default rank-label">@Model.Professione</span>
                        </div>
                    </div>
                    <input type="file" id="imgupload" style="display:none" />
                </div>
                <div class="mt-5 col-6 justify-content-center">
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Nome completo</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Model.Nome @Model.Cognome
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Email</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Model.Email
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Mobile</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            @Model.Mobile
                        </div>
                    </div>
                    <hr>
                </div>

                <div class="col-1">
                    <button type="button" id="btnOpenModaleModificaProfilo" name="btnModificaProfilo" class="btn btn-outline-info btn-circle">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                            <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <div class="row gutters-sm ml-5 mt-5">
            <div class="col-sm-4">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <h6 class="d-flex align-items-center mb-3">Carica <i class="material-icons text-info ml-2">CV</i></h6>
                            </div>
                        </div>
                        @if (Model.CurriculumVitae == null)
                        {
                            <div>
                                <form method="post" action="/Home/UploadFile" enctype="multipart/form-data">
                                    <div class="input-group">
                                        <div class="custom-file">
                                            <input type="file" name="file" class="custom-file-input " id="inputCV" aria-describedby="buttonCV">
                                            <label id="pahtFile" class="custom-file-label my-0 overflow-hidden" for="inputCV">Carica CV</label>
                                        </div>
                                        <div class="input-group-append">
                                            <button class="btn btn-outline-secondary" type="submit" id="buttonCV">Carica</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex justify-content-center">
                                <form method="post" action="/Home/DownloadFile">
                                    <button class="btn btn-primary" type="submit">Download CV</button>
                                </form>
                                <form method="post" action="/Home/EliminaFile">
                                    <button class="ml-1 btn btn-danger" type="submit">Elimina CV</button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-sm-8">
                <div class="card h-100">
                    <div class="card-body body-section-skills">
                        <div class="row">
                            <div class="col-11">
                                <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">Skill</i> Dev</h6>
                            </div>
                            @if (Model.Skills?.Count != 100)
                            {
                                <div class="col-1">
                                    <button type="button" id="btnOpenModaleInseriscSkill" name="btnInserisciSkill" class="btn btn-outline-info btn-circle">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                                        </svg>
                                    </button>
                                </div>
                            }
                        </div>
                        <div id="divSectionSkill"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-end mt-5">
            <div class="col-12 col-sm-8 col-lg-6">
                <!-- Section Heading-->
                <div class="section_heading text-center wow fadeInUp" data-wow-delay="0.2s" style="visibility: visible; animation-delay: 0.2s; animation-name: fadeInUp;">
                    <h2 class="d-flex align-items-center mb-3">I tuoi<i class="material-icons text-info ml-2">Fans</i></h2>
                </div>
            </div>
        </div>
        @foreach (var item in Model.Fans)
        {
            <div class="row ml-5">
                <!-- Single Advisor-->
                <div class="col-12 col-sm-6 col-lg-3">
                    <div class="single_advisor_profile wow fadeInUp" data-wow-delay="0.2s" style="visibility: visible; animation-delay: 0.2s; animation-name: fadeInUp;">
                        <!-- Team Thumb-->
                        <div class="advisor_thumb">
                            <img src="@item.FollowUser?.ImageProfile" style="width: 8rem;" alt="">
                        </div>
                        <!-- Team Details-->
                        <a href="@Url.Action("ViewProfile", "Explore", new { idProfilo = item.FollowUser?.Id })">
                            <div class="single_advisor_details_info">

                                <h6>@item.FollowUser.Nome</h6>
                                <p class="designation">@item.FollowUser.Professione</p>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        }

        <div id="spinner" class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">

    $(() => {
        getSkills()

	    $("#btnOpenModaleModificaProfilo").click(function () {

		    $('#mdlModProf').modal('show');
	    });

	    $("#btnOpenModaleInseriscSkill").click(function () {

	       $('#mdlAddSkill').modal('show');
	    });

        $('#btnInserisciSkill').click(function () {

                var tag = $("#Tag").val()

                try {

                    aggiungiSkill(tag) //TODO: ADD SKILL

                } catch (e) {
                    console.error(e)
                }

            })

	    $("#btnModifica").click(function () {

		    var nome = $("#Nome").val()
		    var cognome = $("#Cognome").val()
		    var professione = $("#Professione").val()
		    var mobile = $("#Mobile").val()

		    $.ajax({
			    url: "@Url.Action("ModificaProfilo", "Home")",
			    type: "POST",
			    datatype: 'json',
			    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
			    data: { nome: nome,
			    cognome: cognome,
			    professione: professione,
			    mobile: mobile },
			    success: function (jqXHR, exception) {

				    $("#mdlModProf").modal("hide");

				    location.reload();
			    },
			    error: function(error) {
				    console.error(error);
			    }
		    });
	    });

	    $('input[type=range]').click(function () {

		    let idTag = $(this).attr('id');
		    let valCompetenza = $(this).val();

			    $.ajax({
			    url: "@Url.Action("ModificaCompetenzaSkill", "Home")",
			    type: "POST",
			    datatype: 'json',
			    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
			    data: { idTag: idTag, valCompetenza: valCompetenza }
		    });
	    });

        $('#OpenImgUpload').click(function () {
            $('#imgupload').trigger('click');
        });

        $('#imgupload').change(readFile);

        $('#inputCV').change(function (e) {
                const file = this.files[0]
                if (file) {

                $(this).parent().find('label').text()

                $('#pahtFile').text(file.name)
                }
        })
    });

    function readFile() {

	    if (this.files && this.files[0]) {

		var FR= new FileReader();

		FR.addEventListener("load", function(e) {

			$.ajax({
			url: "@Url.Action("UploadImage", "Home")",
			type: "POST",
			datatype: 'json',
			headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
			data: { file: e.target.result }
			}).done(function () {
				location.reload();
			});
		});

		FR.readAsDataURL( this.files[0] );
	    }
    }

    function addRemoveListener(e) {

        let idTag = $(e.currentTarget).data('value')

        $.ajax({
            url: "@Url.Action("EliminaCompetenzaSkill", "Home")",
            type: "POST",
            datatype: 'json',
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
            data: { idTag: idTag }
        }).done(function () {
            location.reload();
        })
    }

    function aggiungiSkill(tag) {
        return $.ajax({
            url: "@Url.Action("AggiungiSkill", "Home")",
            type: "POST",
            datatype: 'json',
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
            data: { tag: tag },
            success: function ({ message, error }) {
                successAjax(message, error)
                location.reload()
            },
            failure: function (response) {
                showAlert('Impossibile aggiungere la Skill. Riprovare.', 'alert-danger')
            }
        })
    }

    function showAlert(message, alertBootstrap) {
        let divAlert = $('#alertTemplate')
        let messageAlert = $('#messageAlertTemplate')

        divAlert.removeClass('d-none')
        divAlert.addClass(alertBootstrap)

        messageAlert.text(message)

        divAlert.show()
    }
    </script>
}
